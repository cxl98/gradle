

buildscript {
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
    }

}
//project全局的版本及相关插件
allprojects {
    group 'com.easy.cxl'
    version '1.0-SNAPSHOT'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
}
bootJar{
    archiveFileName ='gradle.jar'
}
subprojects {
    apply plugin: 'java'
    //指定jdk版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    //指定编码格式
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    dependencies {
        //apache Commons
        compile("org.apache.commons:commons-lang3:${commons}")
        // 单元测试
        testCompile("org.springframework.boot:spring-boot-starter-test:${spring_boot_version}")
        testCompile("junit:junit:4.12")
        compile("org.springframework.boot:spring-boot-starter-parent:${spring_boot_version}")
        compile("org.springframework.boot:spring-boot-starter:${spring_boot_version}")
        //lombok
        //一个Lombok为啥写这么多？因为gradle5.0以上的版本都需要手动指定Lombok在编译期使用
        compileOnly("org.projectlombok:lombok:${lombok_version}")
        annotationProcessor("org.projectlombok:lombok:${lombok_version}")
        testCompileOnly("org.projectlombok:lombok:${lombok_version}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombok_version}")
    }
}